# tox.ini
# Runs docker-compose tests. Also creates a development virtualenv.
# Usage:
#   tox # runs the test suite
#   tox -e develop $ create the dev virutalenv

[pypi]
# Use internal pypi with pre-build wheels for ubuntu
index = https://registry.affirm-stage.com/artifactory/api/pypi/pypi/simple

[tox]
envlist = docker-compose, flake8
minversion = 2.3
indexserver =
    default = {[pypi]index}
# skip setup.py
skipsdist = True

[testenv]
basepython = python2.7
setenv =
    PIP_INDEX_URL = {[pypi]index}
    PYTHONIOENCODING = utf-8
deps =
  -rtox-requirements.txt
# for consistency across installations
sitepackages = False
whitelist_externals =
    bin/rm
    bin/mkdir
    bin/cp
    bash

[testenv:develop]
envdir = .venv
usedevelop = True
commands =
    {envpython} --version # tox >= 2.5 https://github.com/tox-dev/tox/issues/316 made empty command sections illegal

[testenv:build-app]
commands =
    # build cabotapp for testing
    cp conf/development.env.example conf/development.env
    bash -euc "docker-compose build"
    bash -euc "docker-compose up -d"
    bash -euc "docker-compose run wait"
    bash -euc "docker-compose run --rm web bash bin/build-app"

[testenv:destroy-app]
commands =
    bash -euc "docker-compose down"

[testenv:docker-compose]
commands =
    # xml test results files go here
    rm -rf build/docker-compose
    mkdir -p build/docker-compose
    mkdir -p static
    cp conf/development.env.example conf/development.env
    bash -euc "docker-compose build"
    bash -euc "docker-compose up -d"
    bash -euc "docker-compose run wait"
    # Need to run this so the tests don't fail with "Relation not found" 
    bash -euc "docker-compose run --rm web bash bin/build-app"
    bash -euc "docker-compose run --rm web python manage.py test cabot || (rm -rf static/ && docker-compose down && exit 1)"
    bash -euc "rm -rf static/"
    bash -euc "docker-compose down"

[testenv:flake8]
commands =
    rm -rf build/flake8/
    mkdir -p build/flake8
    bash -euc -o pipefail "flake8 --config=setup.cfg -j 2 --exit-zero {posargs:} | tee build/flake8/flake8.txt"
    # Fail if there are more than 25 flake8 issues (there were 20 as of 12/19)
    # We should lower this number!
    bash -euc -o pipefail '(("$(wc -l < build/flake8/flake8.txt)" < 25))'
